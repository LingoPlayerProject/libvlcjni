From fdb36dc129e3e1cab50bd6f412c93ee9bcb9fd3a Mon Sep 17 00:00:00 2001
Message-Id: <fdb36dc129e3e1cab50bd6f412c93ee9bcb9fd3a.1659370893.git.thomas@gllm.fr>
In-Reply-To: <f3915491534a4bc2322f22be58b5bc98d70b796b.1659370893.git.thomas@gllm.fr>
References: <f3915491534a4bc2322f22be58b5bc98d70b796b.1659370893.git.thomas@gllm.fr>
From: Thomas Guillem <thomas@gllm.fr>
Date: Wed, 20 Jul 2022 16:44:03 +0200
Subject: [PATCH 4/7] libvlc: media_player: Add record method

---
 include/vlc/libvlc_events.h       |  9 ++++++++
 include/vlc/libvlc_media_player.h | 14 ++++++++++++
 lib/media_player.c                | 36 +++++++++++++++++++++++++++++++
 3 files changed, 59 insertions(+)

diff --git a/include/vlc/libvlc_events.h b/include/vlc/libvlc_events.h
index cd5869abb8..924e9016cb 100644
--- a/include/vlc/libvlc_events.h
+++ b/include/vlc/libvlc_events.h
@@ -31,6 +31,8 @@
 
 # ifdef __cplusplus
 extern "C" {
+# else
+#  include <stdbool.h>
 # endif
 
 typedef struct libvlc_renderer_item_t libvlc_renderer_item_t;
@@ -147,6 +149,7 @@ enum libvlc_event_e {
      */
     libvlc_MediaPlayerTitleSelectionChanged,
     libvlc_MediaPlayerChapterChanged,
+    libvlc_MediaPlayerRecordChanged,
 
     /**
      * A \link #libvlc_media_t media item\endlink was added to a
@@ -400,6 +403,12 @@ typedef struct libvlc_event_t
             const char *device;
         } media_player_audio_device;
 
+        struct
+        {
+            const char *file_path;
+            bool recording;
+        } media_player_record_changed;
+
         struct
         {
             libvlc_renderer_item_t *item;
diff --git a/include/vlc/libvlc_media_player.h b/include/vlc/libvlc_media_player.h
index 51beb770e3..aea4e23ed4 100644
--- a/include/vlc/libvlc_media_player.h
+++ b/include/vlc/libvlc_media_player.h
@@ -25,6 +25,8 @@
 #ifndef VLC_LIBVLC_MEDIA_PLAYER_H
 #define VLC_LIBVLC_MEDIA_PLAYER_H 1
 
+#define LIBVLC_MEDIA_PLAYER_HAS_RECORDING
+
 # ifdef __cplusplus
 extern "C" {
 # else
@@ -2652,6 +2654,18 @@ LIBVLC_API int libvlc_media_player_set_role(libvlc_media_player_t *p_mi,
 
 /** @} audio */
 
+/**
+ * Start/stop recording
+ *
+ * \version LibVLC 4.0.0 and later.
+ *
+ * \param p_mi media player
+ * \param directory path of the recording directory or NULL to stop recording
+ * \return 0 on success, -1 on error
+ */
+LIBVLC_API int libvlc_media_player_record(libvlc_media_player_t *p_mi,
+                                          const char *directory);
+
 /** @} media_player */
 
 # ifdef __cplusplus
diff --git a/lib/media_player.c b/lib/media_player.c
index 043568e25d..4e2acd5d28 100644
--- a/lib/media_player.c
+++ b/lib/media_player.c
@@ -386,6 +386,23 @@ on_chapter_selection_changed(vlc_player_t *player,
     libvlc_event_send(&mp->event_manager, &event);
 }
 
+static void *on_recording_changed(vlc_player_t *player,
+                                  bool recording, void *data)
+{
+    libvlc_media_player_t *mp = data;
+    char *file_path = recording ? NULL :
+                      var_GetString(mp->p_libvlc_instance->p_libvlc_int,
+                                    "record-file");
+
+    libvlc_event_t event;
+    event.type = libvlc_MediaPlayerRecordChanged;
+    event.u.media_player_record_changed.file_path = file_path;
+    event.u.media_player_record_changed.recording = recording;
+
+    libvlc_event_send(&mp->event_manager, &event);
+    free(file_path);
+}
+
 static void
 on_media_subitems_changed(vlc_player_t *player, input_item_t *media,
                           input_item_node_t *new_subitems, void *data)
@@ -501,6 +518,7 @@ static const struct vlc_player_cbs vlc_player_cbs = {
     .on_titles_changed = on_titles_changed,
     .on_title_selection_changed = on_title_selection_changed,
     .on_chapter_selection_changed = on_chapter_selection_changed,
+    .on_recording_changed = on_recording_changed,
     .on_media_subitems_changed = on_media_subitems_changed,
     .on_cork_changed = on_cork_changed,
     .on_vout_changed = on_vout_changed,
@@ -593,6 +611,7 @@ libvlc_media_player_new( libvlc_instance_t *instance )
     var_Create (mp, "rate", VLC_VAR_FLOAT|VLC_VAR_DOINHERIT);
     var_Create (mp, "sout", VLC_VAR_STRING);
     var_Create (mp, "demux-filter", VLC_VAR_STRING);
+    var_Create (mp, "input-record-path", VLC_VAR_STRING);
 
     /* Video */
     var_Create (mp, "vout", VLC_VAR_STRING|VLC_VAR_DOINHERIT);
@@ -2239,3 +2258,20 @@ static_assert(libvlc_video_primaries_BT601_525 == (cast_)COLOR_PRIMARIES_BT601_5
               libvlc_video_primaries_BT470_M   == (cast_)COLOR_PRIMARIES_BT470_M
               , "libvlc video color primaries mismatch");
 #undef cast_
+
+int libvlc_media_player_record(libvlc_media_player_t *p_mi,
+                               const char *directory)
+{
+    vlc_player_t *player = p_mi->player;
+
+    const bool enable = directory != NULL;
+
+    if (enable)
+        var_SetString(p_mi, "input-record-path", directory);
+
+    vlc_player_Lock(player);
+    vlc_player_SetRecordingEnabled(player, enable);
+    vlc_player_Unlock(player);
+
+    return VLC_SUCCESS;
+}
-- 
2.35.1

